# generated by datamodel-codegen:
#   filename:  test_organization.json
#   timestamp: 2025-02-01T04:51:12+00:00

from __future__ import annotations

from typing import List

from pydantic import BaseModel


class AcquirerIdentifier(BaseModel):
    entity_def_id: str
    image_id: str
    permalink: str
    uuid: str
    value: str


class Category(BaseModel):
    entity_def_id: str
    image_id: str
    permalink: str
    uuid: str
    value: str


class CategoryGroup(BaseModel):
    entity_def_id: str
    image_id: str
    permalink: str
    uuid: str
    value: str


class ClosedOn(BaseModel):
    precision: str
    value: str


class DelistedOn(BaseModel):
    precision: str
    value: str


class ExitedOn(BaseModel):
    precision: str
    value: str


class Facebook(BaseModel):
    label: str
    value: str


class FoundedOn(BaseModel):
    precision: str
    value: str


class FounderIdentifier(BaseModel):
    entity_def_id: str
    image_id: str
    permalink: str
    uuid: str
    value: str


class Identifier(BaseModel):
    entity_def_id: str
    image_id: str
    permalink: str
    uuid: str
    value: str


class Linkedin(BaseModel):
    label: str
    value: str


class LocationGroupIdentifier(BaseModel):
    entity_def_id: str
    image_id: str
    location_type: str
    permalink: str
    uuid: str
    value: str


class LocationIdentifier(BaseModel):
    entity_def_id: str
    image_id: str
    location_type: str
    permalink: str
    uuid: str
    value: str


class OwnerIdentifier(BaseModel):
    entity_def_id: str
    image_id: str
    permalink: str
    uuid: str
    value: str


class StockSymbol(BaseModel):
    entity_def_id: str
    image_id: str
    permalink: str
    uuid: str
    value: str


class Twitter(BaseModel):
    label: str
    value: str


class Website(BaseModel):
    label: str
    value: str


class ChildOrganization(BaseModel):
    acquirer_identifier: AcquirerIdentifier
    aliases: List[str]
    categories: List[Category]
    category_groups: List[CategoryGroup]
    closed_on: ClosedOn
    company_type: str
    contact_email: str
    created_at: str
    delisted_on: DelistedOn
    demo_days: bool
    description: str
    entity_def_id: str
    exited_on: ExitedOn
    facebook: Facebook
    facet_ids: List[str]
    founded_on: FoundedOn
    founder_identifiers: List[FounderIdentifier]
    hub_tags: List[str]
    identifier: Identifier
    image_id: str
    image_url: str
    layout_id: str
    legal_name: str
    linkedin: Linkedin
    listed_stock_symbol: str
    location_group_identifiers: List[LocationGroupIdentifier]
    location_identifiers: List[LocationIdentifier]
    name: str
    num_alumni: int
    num_current_advisor_positions: int
    num_current_positions: int
    num_employees_enum: str
    num_enrollments: str
    num_event_appearances: int
    num_portfolio_organizations: int
    num_sub_organizations: int
    operating_status: str
    owner_identifier: OwnerIdentifier
    permalink: str
    permalink_aliases: List[str]
    phone_number: str
    program_application_deadline: str
    program_duration: int
    program_type: str
    rank: int
    rank_org: int
    school_method: str
    school_program: str
    school_type: str
    short_description: str
    status: str
    stock_exchange_symbol: str
    stock_symbol: StockSymbol
    twitter: Twitter
    updated_at: str
    uuid: str
    website: Website
    website_url: str
    went_public_on: str


class OwneeIdentifier(BaseModel):
    entity_def_id: str
    image_id: str
    permalink: str
    uuid: str
    value: str


class ChildOwnership(BaseModel):
    created_at: str
    entity_def_id: str
    identifier: Identifier
    name: str
    ownee_identifier: OwneeIdentifier
    owner_identifier: OwnerIdentifier
    ownership_type: str
    permalink: str
    rank: int
    updated_at: str
    uuid: str


class EventIdentifier(BaseModel):
    entity_def_id: str
    image_id: str
    permalink: str
    uuid: str
    value: str


class EventLocationIdentifier(BaseModel):
    entity_def_id: str
    image_id: str
    location_type: str
    permalink: str
    uuid: str
    value: str


class ParticipantIdentifier(BaseModel):
    entity_def_id: str
    image_id: str
    permalink: str
    uuid: str
    value: str


class EventAppearance(BaseModel):
    appearance_type: str
    created_at: str
    entity_def_id: str
    event_identifier: EventIdentifier
    event_location_identifiers: List[EventLocationIdentifier]
    event_starts_on: str
    identifier: Identifier
    name: str
    participant_identifier: ParticipantIdentifier
    permalink: str
    short_description: str
    updated_at: str
    uuid: str


class Fields(BaseModel):
    acquirer_identifier: AcquirerIdentifier
    aliases: List[str]
    categories: List[Category]
    category_groups: List[CategoryGroup]
    closed_on: ClosedOn
    company_type: str
    contact_email: str
    created_at: str
    delisted_on: DelistedOn
    demo_days: bool
    description: str
    entity_def_id: str
    exited_on: ExitedOn
    facebook: Facebook
    facet_ids: List[str]
    founded_on: FoundedOn
    founder_identifiers: List[FounderIdentifier]
    hub_tags: List[str]
    identifier: Identifier
    image_id: str
    image_url: str
    layout_id: str
    legal_name: str
    linkedin: Linkedin
    listed_stock_symbol: str
    location_group_identifiers: List[LocationGroupIdentifier]
    location_identifiers: List[LocationIdentifier]
    name: str
    num_alumni: int
    num_current_advisor_positions: int
    num_current_positions: int
    num_employees_enum: str
    num_enrollments: str
    num_event_appearances: int
    num_portfolio_organizations: int
    num_sub_organizations: int
    operating_status: str
    owner_identifier: OwnerIdentifier
    permalink: str
    permalink_aliases: List[str]
    phone_number: str
    program_application_deadline: str
    program_duration: int
    program_type: str
    rank: int
    rank_org: int
    school_method: str
    school_program: str
    school_type: str
    short_description: str
    status: str
    stock_exchange_symbol: str
    stock_symbol: StockSymbol
    twitter: Twitter
    updated_at: str
    uuid: str
    website: Website
    website_url: str
    went_public_on: str


class PrimaryOrganization(BaseModel):
    entity_def_id: str
    image_id: str
    permalink: str
    uuid: str
    value: str


class Founder(BaseModel):
    aliases: List[str]
    born_on: str
    created_at: str
    description: str
    died_on: str
    entity_def_id: str
    facebook: Facebook
    facet_ids: List[str]
    first_name: str
    gender: str
    identifier: Identifier
    image_id: str
    image_url: str
    last_name: str
    layout_id: str
    linkedin: Linkedin
    location_group_identifiers: List[LocationGroupIdentifier]
    location_identifiers: List[LocationIdentifier]
    middle_name: str
    name: str
    num_current_advisor_jobs: int
    num_current_jobs: int
    num_event_appearances: int
    num_founded_organizations: int
    num_jobs: int
    num_past_advisor_jobs: int
    num_past_jobs: int
    num_portfolio_organizations: int
    permalink: str
    permalink_aliases: List[str]
    primary_job_title: str
    primary_organization: PrimaryOrganization
    rank: int
    rank_person: int
    short_description: str
    twitter: Twitter
    updated_at: str
    uuid: str
    website: Website
    website_url: str


class HeadquarteredOrganizationIdentifier(BaseModel):
    entity_def_id: str
    image_id: str
    permalink: str
    uuid: str
    value: str


class HeadquartersAddres(BaseModel):
    country_code: str
    created_at: str
    entity_def_id: str
    headquartered_organization_identifier: HeadquarteredOrganizationIdentifier
    identifier: Identifier
    location_identifiers: List[LocationIdentifier]
    name: str
    postal_code: str
    region_code: str
    street_1: str
    street_2: str
    updated_at: str
    uuid: str


class ParentOrganizationItem(BaseModel):
    acquirer_identifier: AcquirerIdentifier
    aliases: List[str]
    categories: List[Category]
    category_groups: List[CategoryGroup]
    closed_on: ClosedOn
    company_type: str
    contact_email: str
    created_at: str
    delisted_on: DelistedOn
    demo_days: bool
    description: str
    entity_def_id: str
    exited_on: ExitedOn
    facebook: Facebook
    facet_ids: List[str]
    founded_on: FoundedOn
    founder_identifiers: List[FounderIdentifier]
    hub_tags: List[str]
    identifier: Identifier
    image_id: str
    image_url: str
    layout_id: str
    legal_name: str
    linkedin: Linkedin
    listed_stock_symbol: str
    location_group_identifiers: List[LocationGroupIdentifier]
    location_identifiers: List[LocationIdentifier]
    name: str
    num_alumni: int
    num_current_advisor_positions: int
    num_current_positions: int
    num_employees_enum: str
    num_enrollments: str
    num_event_appearances: int
    num_portfolio_organizations: int
    num_sub_organizations: int
    operating_status: str
    owner_identifier: OwnerIdentifier
    permalink: str
    permalink_aliases: List[str]
    phone_number: str
    program_application_deadline: str
    program_duration: int
    program_type: str
    rank: int
    rank_org: int
    school_method: str
    school_program: str
    school_type: str
    short_description: str
    status: str
    stock_exchange_symbol: str
    stock_symbol: StockSymbol
    twitter: Twitter
    updated_at: str
    uuid: str
    website: Website
    website_url: str
    went_public_on: str


class ParentOwnershipItem(BaseModel):
    created_at: str
    entity_def_id: str
    identifier: Identifier
    name: str
    ownee_identifier: OwneeIdentifier
    owner_identifier: OwnerIdentifier
    ownership_type: str
    permalink: str
    rank: int
    updated_at: str
    uuid: str


class Cards(BaseModel):
    child_organizations: List[ChildOrganization]
    child_ownerships: List[ChildOwnership]
    event_appearances: List[EventAppearance]
    fields: Fields
    founders: List[Founder]
    headquarters_address: List[HeadquartersAddres]
    parent_organization: List[ParentOrganizationItem]
    parent_ownership: List[ParentOwnershipItem]


class Properties(BaseModel):
    acquirer_identifier: AcquirerIdentifier
    aliases: List[str]
    categories: List[Category]
    category_groups: List[CategoryGroup]
    closed_on: ClosedOn
    company_type: str
    contact_email: str
    created_at: str
    delisted_on: DelistedOn
    demo_days: bool
    description: str
    entity_def_id: str
    exited_on: ExitedOn
    facebook: Facebook
    facet_ids: List[str]
    founded_on: FoundedOn
    founder_identifiers: List[FounderIdentifier]
    hub_tags: List[str]
    identifier: Identifier
    image_id: str
    image_url: str
    layout_id: str
    legal_name: str
    linkedin: Linkedin
    listed_stock_symbol: str
    location_group_identifiers: List[LocationGroupIdentifier]
    location_identifiers: List[LocationIdentifier]
    name: str
    num_alumni: int
    num_current_advisor_positions: int
    num_current_positions: int
    num_employees_enum: str
    num_enrollments: str
    num_event_appearances: int
    num_portfolio_organizations: int
    num_sub_organizations: int
    operating_status: str
    owner_identifier: OwnerIdentifier
    permalink: str
    permalink_aliases: List[str]
    phone_number: str
    program_application_deadline: str
    program_duration: int
    program_type: str
    rank: int
    rank_org: int
    school_method: str
    school_program: str
    school_type: str
    short_description: str
    status: str
    stock_exchange_symbol: str
    stock_symbol: StockSymbol
    twitter: Twitter
    updated_at: str
    uuid: str
    website: Website
    website_url: str
    went_public_on: str


class Organization(BaseModel):
    cards: Cards
    properties: Properties
